Version 1.0.7 -- 02.12.2011@23:31
Many new improvements:
Wrote the basic session handling
Enhanced the model class
Added support for localization configuration in xml files
Added support for event dispatching in extensions
Included jQuery mobile (version 1.0 stable) and a mobile skin/template/layout
Updated jQuery to the latest version
Removed unused files
Created an installer class to deal with "setup" resources

Version 1.0.6 -- 16.02.2011@01:15
Removed support for the old Views class. Only layout/blocks structures are used to
decorate the design.
Added the "type" attribute from the block tags, so now Blocks can be extended into other
classes, each with it's own specific callable actions, in the XML or in the php block file.
Updated jquery to 1.5.
Added 4 methods for the page/head blocks, callable in the xml layout:
 - addCss, removeCss
 - addJs, removeJs
 Sample usage:
 <reference name="head">
	<action method="addCss"><stylesheet>public/css/style.css</stylesheet></action>
	<action method="removeJs"><script>public/js/jquery-1.5.min.js</script></action>
</reference>

Version 1.0.5 --- 15.02.2011@01:55
Improved the layout/blocks implementation. Blocks can now call children in their
main blocks. Children are properly referenced by name now. You cannot call child blocks
if they don't belong to the calling parent.
Added the methods:
 - setTemplate: to set a template for the current block
 - unsetChild: to remove the child from the current block
Sample usage:
<reference name="right">
	<action method="setTemplate"><template>page/right.php</template></action>
	<action method="unsetChild"><name>menu</name></action>
</reference>
Would set the template "page/right.php" to the "right" block, and after that we
would remove the child "menu" for the "right" block.

Version 1.0.4 --- 14.02.2011@03:26
Added a basic implementation for the layout structure, supporting blocks for the design
similar to the Magento layout/blocks architecture. Works quite well, I can't believe it.

Version 1.0.3 --- 11.02.2011@01:22
Added a basic implementation of a profiler, for CPU and MEMORY usage
Started to build a basic theme support for the introductory package and the future backend interface

Version 1.0.2 --- 10.02.2011@01:12
Added a basic implementation of field validators and a base class for model resources
Defined a base Model class and a base Database\Model class
Each model resource is defined in an xml file with the same name as the model; eg: model user.php would have it's fields defined in user.xml

Version 1.0.1 --- Second release
Added basic localization support
Translated labels are now stored in CSV files (app/locale/*.csv)
Locale configuration is now read from xml files (sys/locale/*.xml)

Version 1.0.0 --- Initial release
ZeroG - a PHP 5.3 mvc framework